(function($window){"use strict";var sanitizeCallback=function(callback){return typeof callback==="function"?callback:function(){}},sanitizeInterceptor=function(interceptor){return typeof interceptor!=="undefined"?interceptor:function(model){return model}},cleanModel=function(model){var modelStr,sanitizedModel={};for(var key in model){if(model.hasOwnProperty(key)&&typeof model[key]!=="function"){sanitizedModel[key]=model[key]}}modelStr=JSON.stringify(sanitizedModel);return JSON.parse(modelStr)},modelBuilder={copy:function(){return function(model){return cleanModel(model)}},saveRecord:function(){return function(callback){var passedCallback=sanitizeCallback(callback);if(!this.id){this.createRecord(passedCallback)}else{this.updateRecord(passedCallback)}}},createRecord:function(modelConfig){var postBehavior=modelConfig.service.post,interceptor=sanitizeInterceptor(modelConfig.beforeCreate);return function(callback){var $this=this,passedCallback=sanitizeCallback(callback),$model=this.copy(this),localCallback=function(id,error){if(id!==null){$this.id=id;passedCallback($model)}else{passedCallback(null,error)}};$model=interceptor($model);postBehavior($model,localCallback)}},updateRecord:function(modelConfig){var putBehavior=modelConfig.service.put,interceptor=sanitizeInterceptor(modelConfig.beforeUpdate);return function(callback){var $model=this.copy(this),sanitizedCallback=sanitizeCallback(callback),localCallback=function(data,error){if(data!==null){sanitizedCallback($model)}else{sanitizedCallback(null,error)}};$model=interceptor($model);putBehavior($model,localCallback)}},deleteRecord:function(modelConfig){var deleteBehavior=modelConfig.service.del,interceptor=sanitizeInterceptor(modelConfig.beforeDelete);return function(callback){var $model=this.copy(this),passedCallback=sanitizeCallback(callback),localCallback=function(data,error){if(data!==null){passedCallback($model)}else{passedCallback(null,error)}};$model=interceptor($model);deleteBehavior($model,localCallback)}},revise:function(){return function(updateObj){for(var key in this){if(this.hasOwnProperty(key)&&typeof this[key]!=="function"){this[key]=typeof updateObj[key]!=="undefined"?updateObj[key]:this[key]}}}}},Modella=function(){};Modella.prototype={modelConfig:{},createInstance:function(config){var sanitizedConfig=typeof config!=="undefined"?config:{},$modellaObject=Object.create(this);$modellaObject.modelConfig=sanitizedConfig;return $modellaObject},init:function(callback){var localCallback=sanitizeCallback(callback);if(typeof this.modelConfig.initialObject!=="undefined"){this.initByObject(this.modelConfig.initialObject,localCallback)}else if(typeof this.modelConfig.initialId!=="undefined"){this.initById(this.modelConfig.initialId,localCallback)}else if(typeof this.modelConfig.initialParentId!=="undefined"){this.initByParentId(this.modelConfig.initialParentId,localCallback)}else if(typeof this.modelConfig.initialIds!=="undefined"){this.initByIds(this.modelConfig.initialIds,localCallback)}else{localCallback(null,Error("Unable to initialize model."))}},initByObject:function(modelObject,callback){var passedCallback=sanitizeCallback(callback),localCallback=function(model){passedCallback(model)};this.initModel(modelObject,localCallback)},initById:function(id,callback){var $this=this,passedCallback=sanitizeCallback(callback),afterGet=sanitizeInterceptor(this.modelConfig.afterGet),localCallback=function(dataObject,error){if(dataObject!==null){dataObject=afterGet(dataObject);$this.initByObject(dataObject,passedCallback)}else{passedCallback(null,error)}};this.modelConfig.service.get(id,localCallback)},initByIds:function(idSet,callback){var $this=this,index=-1,finalModelSet=[],passedCallback=sanitizeCallback(callback),afterGet=sanitizeInterceptor(this.modelConfig.afterGet),pushModel=function(model){finalModelSet.push(model)},localCallback=function(model,error){if(model!==null){model=afterGet(model);$this.initByObject(model,pushModel)}else if(finalModelSet!==null){finalModelSet=null;passedCallback(null,error)}if(finalModelSet!==null&&finalModelSet.length===idSet.length){passedCallback(finalModelSet)}};while(typeof idSet[++index]!=="undefined"){this.modelConfig.service.get(idSet[index],localCallback)}},initByParentId:function(parentId,callback){var $this=this,finalModelSet=[],passedCallback=sanitizeCallback(callback),pushModel=function(model){finalModelSet.push(model)},afterGet=sanitizeInterceptor(this.modelConfig.afterGet),prepareModelSet=function(dataSet){var index=-1;while(typeof dataSet[++index]!=="undefined"){dataSet[index]=afterGet(dataSet[index]);$this.initByObject(dataSet[index],pushModel)}},localCallback=function(modelSet,error){if(modelSet!==null){prepareModelSet(modelSet);passedCallback(finalModelSet)}else{passedCallback(null,error)}};this.modelConfig.service.getByParentId(parentId,localCallback)},initModel:function(modelObject,callback){var passedCallback=sanitizeCallback(callback),key;this.modelConfig.customFunctions=this.modelConfig.customFunctions?this.modelConfig.customFunctions:{};for(key in modelBuilder){if(modelBuilder.hasOwnProperty(key)){modelObject[key]=modelBuilder[key](this.modelConfig)}}for(key in this.modelConfig.customFunctions){if(typeof this.modelConfig.customFunctions[key]==="function"){modelObject[key]=this.modelConfig.customFunctions[key]}}passedCallback(modelObject)}};$window.modella=Modella;$window.modella.utilities={sanitizeCallback:sanitizeCallback,sanitizeInterceptor:sanitizeInterceptor,cleanModel:cleanModel}})(window);
(function($window){"use strict";var sanitizeCallback=modella.utilities.sanitizeCallback;function appendSet(originalSet,newSet){newSet=newSet?newSet:[];for(var key in newSet){originalSet[key]=newSet[key]}return originalSet}function buildDataAppender(dataObject,key,callback){var sanitizedCallback=sanitizeCallback(callback);return function(data,error){if(data!==null){dataObject[key]=data}sanitizedCallback(data,error)}}function compileRelativeList(relativeSet,relativeType){var relativeList={};relativeSet=relativeSet?relativeSet:[];for(var key in relativeSet){var relativeName=relativeSet[key].name;relativeList[relativeName]=relativeType}return relativeList}function findRecordById(dataSet,id){var record=null;dataSet=dataSet?dataSet:[];for(var key in dataSet){if(dataSet[key].id&&dataSet[key].id===id){record=dataSet[key];break}}return record}function getRelativesList(model){var relativesList={},parentList=compileRelativeList(model.parents,"parent"),childList=compileRelativeList(model.children,"child");relativesList=appendSet(relativesList,parentList);relativesList=appendSet(relativesList,childList);return relativesList}function verifyObjectIsValid(dataObject){var isValid=dataObject?true:false;if(Object.prototype.toString.call(dataObject)==="[object Array]"&&!dataObject.length){isValid=false}return isValid}function buildSafeObject(dataObject){var safeObject={};dataObject=dataObject?dataObject:{};for(var key in dataObject){if(dataObject.hasOwnProperty(key)){safeObject[key]=dataObject[key]}}return safeObject}$window.modella.extension={appendSet:appendSet,buildDataAppender:buildDataAppender,buildSafeObject:buildSafeObject,findRecordById:findRecordById,getRelativesList:getRelativesList,verifyObjectIsValid:verifyObjectIsValid}})(window);
(function($window){"use strict";var modellaExtender,extensionProperties=["parents","children"],extendedFunctions={},buildDataAppender=modella.extension.buildDataAppender,buildSafeObject=modella.extension.buildSafeObject,checkRelativeNeedsInitialization=modella.extension.verifyObjectIsValid,findRecordById=modella.extension.findRecordById,getRelativesList=modella.extension.getRelativesList,sanitizeCallback=modella.utilities.sanitizeCallback;function updateRelativeSet(modelArray,updateArray){modelArray=modelArray?modelArray:[];for(var index in modelArray){var matchingRecord=modelArray[index].id?findRecordById(updateArray,modelArray[index].id):null;if(matchingRecord!==null){modelArray[index].revise(matchingRecord)}}}function updateRelative(modelObj,updateObj){if(Object.prototype.toString.call(modelObj)==="[object Array]"){updateRelativeSet(modelObj,updateObj)}else if(modelObj){modelObj.revise(updateObj)}}function getBaseConfig($model,objectType,name){var configLocation=objectType==="parent"?"parents":"children",key,baseConfig;for(key in $model[configLocation]){if(name===$model[configLocation][key].name){baseConfig=$model[configLocation][key].baseConfig}}return baseConfig}function setInitialCondition(config,record,$model){if(typeof record.foreignKey!=="undefined"){config.initialId=$model[record.foreignKey]}else{config.initialParentId=$model.id}}function getRelatives(dataConfigArray,$modelObj,passedCallback){var modelExtender=modella.extender,tempConfig,tempCallback,tempRecord;passedCallback=sanitizeCallback(passedCallback);for(var index in dataConfigArray){tempRecord=dataConfigArray[index];tempCallback=buildDataAppender($modelObj,tempRecord.name,passedCallback);tempConfig=tempRecord.baseConfig;setInitialCondition(tempConfig,tempRecord,$modelObj);modelExtender.init(tempConfig,tempCallback)}}function initializeObject(config,object,callback){config.initialObject=object;modella.extender.init(config,callback)}function initRelative($relativeObject,baseConfig){var callback=function(finalObject){$relativeObject=finalObject},key;if(typeof $relativeObject[0]!=="undefined"){for(key in $relativeObject){callback=buildDataAppender($relativeObject,key);initializeObject(baseConfig,$relativeObject[key],callback)}}else{initializeObject(baseConfig,$relativeObject,callback)}delete baseConfig.initialObject}function initRelativeObjects($model){var relativesList=getRelativesList($model),key,needsInitialization,baseConfig;for(key in relativesList){needsInitialization=checkRelativeNeedsInitialization($model[key]);if(needsInitialization){baseConfig=getBaseConfig($model,relativesList[key],key);initRelative($model[key],baseConfig)}}}function cleanRelatives(model,relativeType){var safeModel=buildSafeObject(model);for(var key in model[relativeType]){var relativeKey=model[relativeType][key].name;delete safeModel[relativeKey]}return safeModel}function extendCopy(model){var originalCopy=model.copy;model.copy=function($model){var amendedModel;$model=$model?$model:this;amendedModel=cleanRelatives($model,"parents");amendedModel=cleanRelatives(amendedModel,"children");delete amendedModel.parents;delete amendedModel.children;delete amendedModel.baseConfig;originalCopy(amendedModel)};return model}extendedFunctions.getParents=function(passedCallback){getRelatives(this.parents,this,passedCallback)};extendedFunctions.getChildren=function(passedCallback){getRelatives(this.children,this,passedCallback)};extendedFunctions.revise=function(updateObj){var relativesList=getRelativesList(this);for(var key in updateObj){if(!relativesList[key]&&this.hasOwnProperty(key)){this[key]=updateObj[key]}else if(relativesList[key]&&this.hasOwnProperty(key)){updateRelative(this[key],updateObj[key])}}};function appendExtendedFunctions($model){for(var key in extendedFunctions){if(extendedFunctions.hasOwnProperty(key)){$model[key]=extendedFunctions[key]}}return $model}function appendExtendedProperties($config,$model){var key,tempValue;for(var index in extensionProperties){key=extensionProperties[index];tempValue=typeof $config[key]!=="undefined"?$config[key]:null;$model[key]=tempValue}return $model}function extendModel($config,$model){$model=appendExtendedProperties($config,$model);$model=appendExtendedFunctions($model);$model=extendCopy($model);return $model}modellaExtender={init:function(config,callback){var localModella=new modella,sanitizedCallback=sanitizeCallback(callback),localCallback=function($passedModel,$error){var finalModel=$passedModel;if(finalModel&&typeof finalModel[0]==="undefined"){finalModel=extendModel(config,finalModel);initRelativeObjects(finalModel)}else if(finalModel){for(var index in finalModel){finalModel[index]=extendModel(config,finalModel[index]);initRelativeObjects(finalModel)}}sanitizedCallback(finalModel,$error)};localModella.modelConfig=config;localModella.init(localCallback)}};$window.modella.extender=modellaExtender})(window);