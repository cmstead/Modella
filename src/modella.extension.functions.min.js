(function($window){"use strict";var sanitizeCallback=modella.utilities.sanitizeCallback;function appendSet(originalSet,newSet){newSet=newSet?newSet:[];for(var key in newSet){originalSet[key]=newSet[key]}return originalSet}function buildDataAppender(dataObject,key,callback){var sanitizedCallback=sanitizeCallback(callback);return function(data,error){if(data!==null){dataObject[key]=data}sanitizedCallback(data,error)}}function compileRelativeList(relativeSet,relativeType){var relativeList={};relativeSet=relativeSet?relativeSet:[];for(var key in relativeSet){var relativeName=relativeSet[key].name;relativeList[relativeName]=relativeType}return relativeList}function findRecordById(dataSet,id){var record=null;dataSet=dataSet?dataSet:[];for(var key in dataSet){if(dataSet[key].id&&dataSet[key].id===id){record=dataSet[key];break}}return record}function getRelativesList(model){var relativesList={},parentList=compileRelativeList(model.parents,"parent"),childList=compileRelativeList(model.children,"child");relativesList=appendSet(relativesList,parentList);relativesList=appendSet(relativesList,childList);return relativesList}function verifyObjectIsValid(dataObject){var isValid=dataObject?true:false;if(Object.prototype.toString.call(dataObject)==="[object Array]"&&!dataObject.length){isValid=false}return isValid}function buildSafeObject(dataObject){var safeObject={};dataObject=dataObject?dataObject:{};for(var key in dataObject){if(dataObject.hasOwnProperty(key)){safeObject[key]=dataObject[key]}}return safeObject}function pluralize(word){var lastChar;word=typeof word==="string"?word:"";lastChar=word.substring(word.length-1);if(lastChar.toLowerCase()==="y"){word=word.substr(0,word.length-1)+"ie"}return word+"s"}function validateObject(testObject,conditions){var verified=true;for(var key in conditions){verified=testObject[key]!==conditions[key]?false:verified}return verified}function find(objectCollection,conditions){var result=null;for(var key in objectCollection){if(validateObject(objectCollection[key],conditions)){result=objectCollection[key];break}}return result}$window.modella.extension={appendSet:appendSet,buildDataAppender:buildDataAppender,buildSafeObject:buildSafeObject,findRecordById:findRecordById,getRelativesList:getRelativesList,verifyObjectIsValid:verifyObjectIsValid,validateObject:validateObject,pluralize:pluralize,find:find}})(window);